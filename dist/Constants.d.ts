export declare class AdalErrorMessage {
    static accessingMetadataDocumentFailed: string;
    static assemblyNotFoundTemplate: string;
    static assemblyLoadFailedTemplate: string;
    static authenticationUiFailed: string;
    static authorityInvalidUriFormat: string;
    static authorityNotInValidList: string;
    static authorityValidationFailed: string;
    static nonHttpsRedirectNotSupported: string;
    static authorityUriInsecure: string;
    static authorityUriInvalidPath: string;
    static authorizationServerInvalidResponse: string;
    static certificateKeySizeTooSmallTemplate: string;
    static emailAddressSuffixMismatch: string;
    static encodedTokenTooLong: string;
    static failedToAcquireTokenSilently: string;
    static failedToRefreshToken: string;
    static federatedServiceReturnedErrorTemplate: string;
    static identityProtocolLoginUrlNull: string;
    static identityProtocolMismatch: string;
    static identityProviderRequestFailed: string;
    static invalidArgumentLength: string;
    static invalidAuthenticateHeaderFormat: string;
    static invalidAuthorityTypeTemplate: string;
    static invalidCredentialType: string;
    static invalidFormatParameterTemplate: string;
    static invalidTokenCacheKeyFormat: string;
    static missingAuthenticateHeader: string;
    static multipleTokensMatched: string;
    static networkIsNotAvailable: string;
    static noDataFromSTS: string;
    static nullParameterTemplate: string;
    static parsingMetadataDocumentFailed: string;
    static parsingWsTrustResponseFailed: string;
    static passwordRequiredForManagedUserError: string;
    static redirectUriContainsFragment: string;
    static serviceReturnedError: string;
    static brokerReponseHashMismatch: string;
    static stsMetadataRequestFailed: string;
    static stsTokenRequestFailed: string;
    static unauthorizedHttpStatusCodeExpected: string;
    static unauthorizedResponseExpected: string;
    static unexpectedAuthorityValidList: string;
    static unknown: string;
    static unknownUser: string;
    static unknownUserType: string;
    static unsupportedAuthorityValidation: string;
    static unsupportedMultiRefreshToken: string;
    static authenticationCanceled: string;
    static userCredentialAssertionTypeEmpty: string;
    static userInteractionRequired: string;
    static userRealmDiscoveryFailed: string;
    static wsTrustEndpointNotFoundInMetadataDocument: string;
    static getUserNameFailed: string;
    static missingFederationMetadataUrl: string;
    static specifyAnyUser: string;
    static integratedAuthFailed: string;
    static deviceCertificateNotFoundTemplate: string;
    static interactionRequired: string;
    static userMismatch: (user1: string, user2: string) => string;
    static duplicateQueryParameter: (param: string) => string;
}
