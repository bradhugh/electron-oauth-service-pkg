export declare class AdalErrorCode {
    static unknown: string;
    static nonHttpsRedirectNotSupported: string;
    static invalidArgument: string;
    static authenticationFailed: string;
    static authenticationCanceled: string;
    static unauthorizedResponseExpected: string;
    static authorityNotInValidList: string;
    static authorityValidationFailed: string;
    static assemblyLoadFailed: string;
    static assemblyNotFound: string;
    static invalidOwnerWindowType: string;
    static multipleTokensMatched: string;
    static invalidAuthorityType: string;
    static invalidCredentialType: string;
    static invalidServiceUrl: string;
    static failedToAcquireTokenSilently: string;
    static certificateKeySizeTooSmall: string;
    static identityProtocolLoginUrlNull: string;
    static identityProtocolMismatch: string;
    static emailAddressSuffixMismatch: string;
    static identityProviderRequestFailed: string;
    static stsTokenRequestFailed: string;
    static encodedTokenTooLong: string;
    static serviceUnavailable: string;
    static serviceReturnedError: string;
    static federatedServiceReturnedError: string;
    static stsMetadataRequestFailed: string;
    static noDataFromSts: string;
    static userMismatch: string;
    static unknownUserType: string;
    static unknownUser: string;
    static userRealmDiscoveryFailed: string;
    static accessingWsMetadataExchangeFailed: string;
    static parsingWsMetadataExchangeFailed: string;
    static wsTrustEndpointNotFoundInMetadataDocument: string;
    static parsingWsTrustResponseFailed: string;
    static networkNotAvailable: string;
    static authenticationUiFailed: string;
    static userInteractionRequired: string;
    static passwordRequiredForManagedUserError: string;
    static getUserNameFailed: string;
    static missingFederationMetadataUrl: string;
    static failedToRefreshToken: string;
    static integratedAuthFailed: string;
    static duplicateQueryParameter: string;
    static brokerReponseHashMismatch: string;
    static deviceCertificateNotFound: string;
    static interactionRequired: string;
}
